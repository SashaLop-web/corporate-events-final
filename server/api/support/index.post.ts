import { db } from '~/server/database/db'
import { defineEventHandler, readBody, createError } from 'h3'

interface SupportRequestBody {
	name: string
	email: string
	topic: string
	message: string
}

export default defineEventHandler(async event => {
	try {
		const body = await readBody<SupportRequestBody>(event)

		// –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
		console.log('üì® –ü—Ä–∏—à—ë–ª –∑–∞–ø—Ä–æ—Å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É:', body)

		// –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
		if (!body.name || !body.email || !body.message || !body.topic) {
			console.warn('‚ö†Ô∏è –ù–µ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã')
			throw createError({
				statusCode: 400,
				statusMessage: '–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã',
			})
		}

		// –í—Å—Ç–∞–≤–∫–∞ –≤ —Ç–∞–±–ª–∏—Ü—É support_requests
		const inserted = await db('support_requests')
			.insert({
				name: body.name,
				email: body.email,
				topic: body.topic,
				message: body.message,
				created_at: new Date().toISOString(),
			})
			.returning('id') // –¥–ª—è PostgreSQL

		console.log('‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω, ID:', inserted)

		return {
			success: true,
			message: '–ó–∞–ø—Ä–æ—Å —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –±–∞–∑–µ',
			id: inserted[0]?.id || inserted[0], // –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–µ—Ä—Å–∏–∏ pg/knex
		}
	} catch (error: any) {
		console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î:', error.message)
		throw createError({
			statusCode: 500,
			statusMessage: error.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞',
		})
	}
})
